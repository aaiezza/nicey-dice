# This workflow will package the project and create the release

name: Create Release

on:
  push:
    branches:
      - 'releases/**'

jobs:
  version:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.create_variables.outputs.tag }}
      jar-name: ${{ steps.create_variables.outputs.jar-name }}
      release-jar-name: ${{ steps.create_variables.outputs.release-jar-name }}

    steps:
    - uses: actions/checkout@v2.1.0

    - name: Retrieve Semantic Version
      id: create_variables
      run: |
        CURRENT_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        echo $CURRENT_VERSION
        echo ::set-output name=tag::"${CURRENT_VERSION%-SNAPSHOT}+${GITHUB_RUN_NUMBER}"
        echo "Setting version to: ""${CURRENT_VERSION%-SNAPSHOT}+${GITHUB_RUN_NUMBER}"
        ARTIFACT_NAME=`mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout`
        echo ::set-output name=jar-name::$ARTIFACT_NAME-$CURRENT_VERSION.jar
        echo ::set-output name=release-jar-name::$ARTIFACT_NAME-${CURRENT_VERSION%-SNAPSHOT}+${GITHUB_RUN_NUMBER}.jar

  release:
    needs: version

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.1.0
      with:
        ref: releases/${{ needs.version.outputs.tag }}

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B install -Dmaven.test.skip=true

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.version.outputs.tag }}
        release_name: Release ${{ needs.version.outputs.tag }}
        draft: false
        prerelease: true
        # Update this `prerelease` to `false` when we are ready to go!

    - name: Upload Jar
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ needs.version.outputs.jar-name }}
        asset_name: ${{ needs.version.outputs.release-jar-name }}
        asset_content_type: application/java-archive
